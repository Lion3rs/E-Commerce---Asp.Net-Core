CREATE TABLE CATEGORY (
    ID NUMBER NOT NULL,
    NAME VARCHAR2 (50),
    
    CONSTRAINT PK_CATEGORYID PRIMARY KEY (ID)
);

CREATE SEQUENCE CATEGORYID_SEQ;

CREATE TABLE SUBCATEGORY (
    ID NUMBER NOT NULL,
    NAME VARCHAR2 (50),
    CATEGORYID NUMBER,
    
    CONSTRAINT PK_SUBCATEGORYID PRIMARY KEY (ID),
    CONSTRAINT FK_CATEGORYID_SUBCATEGORY FOREIGN KEY (CATEGORYID) REFERENCES CATEGORY (ID)
);

CREATE SEQUENCE SUBCATEGORYID_SEQ;

CREATE TABLE PRODUCT (
    ID NUMBER NOT NULL,
    NAME VARCHAR2 (50),
    DESCRIPTION VARCHAR2 (50),
    PRICE NUMBER (5,2),
    QUANTITY NUMBER,
    IMAGEURL VARCHAR2 (100),
    SUBCATEGORYID NUMBER,
    
    CONSTRAINT PK_PRODUCT PRIMARY KEY (ID),
    CONSTRAINT FK_SUBCATEGORYID_PRODUCT FOREIGN KEY (SUBCATEGORYID) REFERENCES SUBCATEGORY (ID)
);

CREATE SEQUENCE PRODUCT_SEQ;

CREATE TABLE ROLE (
    ID NUMBER NOT NULL,
    NAME VARCHAR2 (50),
    
    CONSTRAINT PK_ROLEID PRIMARY KEY (ID)
);

CREATE SEQUENCE ROLEID_SEQ;

CREATE TABLE USERS(
    ID NUMBER NOT NULL,
    NAME VARCHAR2 (50),
    PHONENUMBER VARCHAR2(13),
    EMAIL VARCHAR2(50),
    ADDRESS VARCHAR2(100),
    POSTALCODE VARCHAR2(5),
    USERNAME VARCHAR2(20),
    PASSWORD VARCHAR2(50),
    ROLEID NUMBER,
    
    CONSTRAINT PK_USERSID PRIMARY KEY (ID),
    CONSTRAINT FK_ROLEID_USERS FOREIGN KEY (ROLEID) REFERENCES ROLE (ID)
);

CREATE SEQUENCE USERSID_SEQ;

CREATE TABLE PRODUCTREVIEW (
    ID NUMBER NOT NULL,
    PRODUCTID NUMBER,
    RATING VARCHAR2(1),
    REVIEW VARCHAR2(500),
    USERID NUMBER,
    CREATIONDATE DATE,
    
    CONSTRAINT PK_PRODUCTREVIEWID PRIMARY KEY (ID),
    CONSTRAINT FK_PRODUCTID_REVIEW FOREIGN KEY (PRODUCTID) REFERENCES PRODUCT (ID),
    CONSTRAINT FK_USERID_REVIEW FOREIGN KEY (USERID) REFERENCES USERS (ID)
);

CREATE SEQUENCE PRODUCTREVIEW_SEQ;

CREATE TABLE WISHLIST (
    ID NUMBER NOT NULL,
    PRODUCTID NUMBER,
    USERID NUMBER,
    
    CONSTRAINT PK_WISHLISTID PRIMARY KEY (ID),
    CONSTRAINT FK_PRODUCTID_WISHLIST FOREIGN KEY (PRODUCTID) REFERENCES PRODUCT (ID),
    CONSTRAINT FK_USERID_WISHLIST FOREIGN KEY (USERID) REFERENCES USERS (ID)
);

CREATE SEQUENCE WISHLIST_SEQ;

CREATE TABLE CART (
    ID NUMBER NOT NULL,
    PRODUCTID NUMBER,
    QUANTITY NUMBER,
    TOTALPRICE NUMBER (5,2),
    USERID NUMBER,
    
    CONSTRAINT PK_CARTID PRIMARY KEY (ID),
    CONSTRAINT FK_PRODUCTID_CART FOREIGN KEY (PRODUCTID) REFERENCES PRODUCT (ID),
    CONSTRAINT FK_USERID_CART FOREIGN KEY (USERID) REFERENCES USERS (ID)
);

CREATE SEQUENCE CART_SEQ;

CREATE TABLE PAYMENT (
    ID NUMBER NOT NULL,
    NAME VARCHAR2(50),
    NOCARD VARCHAR(19),
    EXPIRYDATE DATE,
    CVV VARCHAR(3),
    PAYMENTMODE VARCHAR2(50),
    
    CONSTRAINT PK_PAYMENTID PRIMARY KEY (ID)
);

CREATE SEQUENCE PAYMENT_SEQ;

CREATE TABLE ORDERS (
    ID NUMBER NOT NULL,
    NOORDER VARCHAR2(100),
    STATUS VARCHAR2(10),
    CARTID NUMBER,
    PRODUCTID NUMBER,
    USERID NUMBER,
    PAYMENTID NUMBER,
    
    CONSTRAINT PK_ORDERID PRIMARY KEY (ID),
    CONSTRAINT FK_PRODUCTID_ORDER FOREIGN KEY (PRODUCTID) REFERENCES PRODUCT (ID),
    CONSTRAINT FK_USERID_ORDER FOREIGN KEY (USERID) REFERENCES USERS (ID),
    CONSTRAINT FK_CARTID_ORDER FOREIGN KEY (CARTID) REFERENCES CART(ID),
    CONSTRAINT FK_PAYMENTID_ORDER FOREIGN KEY (PAYMENTID) REFERENCES PAYMENT (ID)
);

CREATE SEQUENCE ORDERS_SEQ;